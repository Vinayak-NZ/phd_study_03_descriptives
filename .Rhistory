"Empowerment",
ifelse(dt_inclusion$name == "Include education",
"Education",
ifelse(dt_inclusion$name == "Include search",
"Search",
ifelse(dt_inclusion$name == "Include accessibility",
"Accessibility",
ifelse(dt_inclusion$name == "Include communication",
"Communication",
ifelse(dt_inclusion$name == "Include monitoring",
"Monitoring",
iflese(dt_inclusion$name == "Include video",
"Video",
ifelse(dt_inclusion$name == "Include text",
"Text",
ifelse(dt_inclusion$name == "Include native-app",
"Native-app",
ifelse(dt_inclusion$name == "Include web-app",
"Web-app", "Interactivity")))))))))))
dt_inclusion$name_labels <-
ifelse(dt_inclusion$name == "Include other",
"Other",
ifelse(dt_inclusion$name == "Include empowerment",
"Empowerment",
ifelse(dt_inclusion$name == "Include education",
"Education",
ifelse(dt_inclusion$name == "Include search",
"Search",
ifelse(dt_inclusion$name == "Include accessibility",
"Accessibility",
ifelse(dt_inclusion$name == "Include communication",
"Communication",
ifelse(dt_inclusion$name == "Include monitoring",
"Monitoring",
ifelse(dt_inclusion$name == "Include video",
"Video",
ifelse(dt_inclusion$name == "Include text",
"Text",
ifelse(dt_inclusion$name == "Include native-app",
"Native-app",
ifelse(dt_inclusion$name == "Include web-app",
"Web-app", "Interactivity")))))))))))
dt_inclusion$name_labels = factor(dt_inclusion$name_labels,
levels = c("Empowerment",
"Education",
"Search",
"Accessibility",
"Communication",
"Monitoring",
"Video",
"Text",
"Native-app",
"Web-app",
"Interactivity",
"Other"))
ggplot(dt_inclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(dt_inclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(dt_inclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# exclusion-needs
dt_exclusion <- codes_sources[[12]]
dt_exclusion$name_labels <-
ifelse(dt_exclusion$name == "Exclude other",
"Other",
ifelse(dt_exclusion$name == "Exclude empowerment",
"Empowerment",
ifelse(dt_exclusion$name == "Exclude education",
"Education",
ifelse(dt_exclusion$name == "Exclude search",
"Search",
ifelse(dt_exclusion$name == "Exclude accessibility",
"Accessibility",
ifelse(dt_exclusion$name == "Exclude communication",
"Communication",
ifelse(dt_exclusion$name == "Exclude monitoring",
"Monitoring",
ifelse(dt_exclusion$name == "Exclude video",
"Video",
ifelse(dt_exclusion$name == "Exclude text",
"Text",
ifelse(dt_exclusion$name == "Exclude native-app",
"Native-app",
ifelse(dt_exclusion$name == "Exclude web-app",
"Web-app", "Interactivity")))))))))))
ggplot(dt_exclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Digital health tool"),
subtitle = "Bar chart of features to exclude in the digital health tool",
caption = "Data source: COT project") +
xlab("Features") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
dt_exclusion$name_labels = factor(dt_exclusion$name_labels,
levels = c("Empowerment",
"Education",
"Search",
"Accessibility",
"Communication",
"Monitoring",
"Video",
"Text",
"Native-app",
"Web-app",
"Interactivity",
"Other"))
ggplot(dt_exclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Digital health tool"),
subtitle = "Bar chart of features to exclude in the digital health tool",
caption = "Data source: COT project") +
xlab("Features") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# tool-utility
tool_utility <- codes_sources[[15]]
View(tool_utility)
# tool-utility
tool_utility <- codes_sources[[15]]
tool_utility$name_labels <-
ifelse(tool_utility$name == "UTO",
"Other", tool_utility$name)
tool_utility$name_labels = factor(tool_utility$name_labels,
levels = c("No use",
"One time use",
"Important consultations",
"All consultations",
"Conditional use",
"Other"))
View(tool_utility)
ggplot(tool_utility,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Digital health tool"),
subtitle = "Bar chart of utility of tool",
caption = "Data source: COT project") +
xlab("Expected usage") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
tb_retain <- codes_sources[[13]]
tb_retain$name_labels <-
ifelse(tb_retain$name == "RTO", "Other",
ifelse(tb_retain$name == "Functionality R",
"Functionality",
ifelse(tb_retain$name == "Content R",
"Content",
ifelse(tb_retain$name == "Design R",
"Design",
ifelse(tb_retain$name == "Handling data R",
"Data", "Web-app")))))
tb_retain$name_labels = factor(tb_retain$name_labels,
levels = c("Functionality",
"Content",
"Design",
"Data",
"Web-app",
"Other"))
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
coord_flip() +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# teambaby-modify
tb_modify <- codes_sources[[14]]
tb_modify$name_labels <-
ifelse(tb_modify$name == "MTO", "Other",
ifelse(tb_modify$name == "Functionality M",
"Functionality",
ifelse(tb_modify$name == "Content M",
"Content",
ifelse(tb_modify$name == "Design M",
"Design",
ifelse(tb_modify$name == "Handling data M",
"Data", "Web-app")))))
tb_modify$name_labels = factor(tb_modify$name_labels,
levels = c("Functionality",
"Content",
"Design",
"Data",
"Web-app",
"Other"))
ggplot(tb_modify,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(tb_modify,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
=======
plot.caption = element_text(color = "#454543", face = "italic")
)
>>>>>>> 415ac530e0644c458ae29986622dae7cdd474618
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/02_format_codes.R")
source("R/03_data_extracts.R")
source("R/04_aggregate_data.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/02_format_codes.R")
source("R/03_data_extracts.R")
source("R/04_aggregate_data.R")
source("R/05_visualise_communication_survey.R")
source("R/05_visualise_demographics.R")
source("R/05_visualise_health_conditions.R")
source("R/05_visualise_regions.R")
source("R/05_visualise_waiting_room.R")
source("R/06_flowchart_workshops.R")
## ---- visualise-codes
source("R/05_visualise_codes_digital_tool.R")
source("R/05_visualise_codes_needs.R")
source("R/05_visualise_codes_preparation.R")
source("R/05_visualise_codes_teambaby.R")
source("R/05_visualise_codes_waiting_room_experiences.R")
# preparation-location
preparation_location <- codes_sources[[5]]
preparation_location$name_labels = factor(preparation_location$name,
levels = c("At home",
"On the way",
"In the clinic",
"Other"))
plot_prep_location <-
ggplot(preparation_location,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Preparation to see the doctor"),
subtitle = "Bar chart of where people prepare",
caption = "Data source: Patient preparedness tool") +
xlab("Preparation location") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggsave("output/plot_prep_location.png",
plot = plot_prep_location)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/02_format_codes.R")
source("R/03_data_extracts.R")
source("R/04_aggregate_data.R")
source("R/05_visualise_regions.R")
source("R/05_visualise_regions.R")
source("R/01_load_data.R")
View(demographics)
View(needs_complaints)
View(communication_exp)
View(retaining_teambaby)
View(health_related_information)
View(waiting_room_exp)
code_frequencies <- read.csv("input/code_frequencies.csv", sep = "\t")
View(code_frequencies)
code_frequencies <- read.csv("input/code_frequencies.csv", sep = ";")
View(code_frequencies)
code_frequencies <- read.csv("input/code_frequencies.csv", sep = ",")
View(code_frequencies)
code_frequencies <- code_frequencies[!(code_frequencies$code_tree == code_frequencies$parent_name), ]
View(code_frequencies)
# assumptions about responsibility
cf_assumptions_responsibility <-
code_frequencies[code_frequencies$parent_name == "Assumptions about responsibility", ]
View(cf_assumptions_responsibility)
code_frequencies <- read.csv("input/code_frequencies.csv", sep = ",")
# remove-parent-frequencies
code_frequencies <-
code_frequencies[!(code_frequencies$code_tree == code_frequencies$parent_name), ]
# subset-text-extracts
frequency_parent_codes <-
list("Needs and complaints",
"System challenges",
"Assumptions about responsibility",
"Preparation timing",
"Preparation location",
"Preparation method",
"Preparation reason",
"Preparation assistance",
"Emotions whilst waiting for the doctor",
"Thoughts whilst waiting for the doctor",
"Needs for a digital tool",
"Feature inclusion",
"Feature exclusion",
"Retaining TeamBaby",
"Modifying TeamBaby",
"Utility of tool")
text_codes_sub <- lapply(frequency_parent_codes,
subset_code_frequencies,
code_frequencies)
# subset-qualcoder-code-frequencies
subset_code_frequencies <- function(data, parent_id){
subset_data <- data[data$parent_name == parent_id, ]
output(parent_id)
}
text_codes_sub <- lapply(frequency_parent_codes,
subset_code_frequencies,
code_frequencies)
# subset-qualcoder-code-frequencies
subset_code_frequencies <- function(parent_id, data){
subset_data <- data[data$parent_name == parent_id, ]
output(parent_id)
}
text_codes_sub <- lapply(frequency_parent_codes,
subset_code_frequencies,
code_frequencies)
# subset-qualcoder-code-frequencies
subset_code_frequencies <- function(parent_id, data){
subset_data <- data[data$parent_name == parent_id, ]
return(subset_data)
}
text_codes_sub <- lapply(frequency_parent_codes,
subset_code_frequencies,
code_frequencies)
View(text_codes_sub)
View(text_codes_sub[[1]])
