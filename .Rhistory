country_input_table$country_health_care_received <- country_input_table$Var2
country_input_table$Count <- country_input_table$Freq
ggplot(country_input_table, aes(countries_resided, country_health_care_received, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
demographics$countries_resided <- gsub(" ", "", demographics$countries_resided, fixed = TRUE)
country_list <- regmatches(demographics$countries_resided,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$countries_resided,
perl=TRUE))
country_list
country_list_edited <- lapply(country_list, strsplit, ",")
country_list_edited
country_list_edited[[1]]
length(country_list_edited[[1]])
country_list_edited[1]
length(country_list_edited[1])
table(country_list_edited[1])
length(table(country_list_edited[1]))
countries_resided <- unlist(country_list_edited)
countries_resided
length(unlist(country_list_edited[1]))
test <- lapply(country_list_edited, function(x) {length(unlist(x))})
test
test_two <- unlist(test)
test_two
test_two[[2]]
test_two[[3]]
test_par <- c()
for(i in 1:nrow(demographics)){
x <- rep(paste0("CC", i), test_two[[i]])
o < - c(test_par, x)
}
for(i in 1:nrow(demographics)){
x <- rep(paste0("CC", i), test_two[[i]])
o <- c(test_par, x)
}
o
test_par <- c()
test_par[[1:2]] <- "yay"
test_par[[1 to 2]] <- "yay"
test_par[[1]] <- "yay"
test_par
test_par <- c()
test_par[1:2] <- "yay"
test_par
test_par <- c()
for(i in 1:nrow(demographics)){
x <- rep(paste0("CC", i), test_two[[i]])
o <- c(test_par, x)
}
for(i in 1:10){
x <- rep(paste0("CC", i), test_two[[i]])
o <- c(test_par, x)
}
test_par <- c()
for(i in 1:nrow(demographics)){
x <- rep(paste0("CC", i), test_two[[i]])
test_par <- c(test_par, x)
}
test_two
country_input <- data.frame(co_creator = test_par,
country_resided = countries_resided)
View(country_input)
country_input_table <-
as.data.frame(table(country_input$co_creator,
country_input$country_resided))
country_input_table$co_creator <- country_input_table$Var1
country_input_table$country_resided <- country_input_table$Var2
country_input_table$Count <- country_input_table$Freq
ggplot(country_input, aes(test_par, countries_resided, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
View(country_input_table)
ggplot(country_input_table, aes(co_creator, countries_resided, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
View(country_input_table)
country_input_table <- country_input_table[country_input_table$Count > 0, ]
ggplot(country_input_table, aes(countries_resided, country_health_care_received, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
ggplot(country_input_table, aes(co_creator, countries_resided, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
View(country_input_table)
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
# extract country resided in
demographics$countries_resided <- gsub(" ", "",
demographics$countries_resided,
fixed = TRUE)
country_list <- regmatches(demographics$countries_resided,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$countries_resided,
perl=TRUE))
country_list_edited <- lapply(country_list, strsplit, ",")
countries_resided <- unlist(country_list_edited)
countries_resided
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
# extract country resided in
demographics$countries_resided <- gsub(" ", "",
demographics$countries_resided,
fixed = TRUE)
country_list <- regmatches(demographics$countries_resided,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$countries_resided,
perl=TRUE))
country_list_edited <- lapply(country_list, strsplit, ",")
countries_resided <- unlist(country_list_edited)
# extract countries received health care in
demographics$countries_health_care <- gsub(" ", "",
demographics$countries_health_care,
fixed = TRUE)
country_health_care_list <-
regmatches(demographics$countries_health_care,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$countries_health_care,
perl=TRUE))
country_health_care_list_edited <- lapply(country_health_care_list,
strsplit, ",")
country_health_care_received <- unlist(country_health_care_list_edited)
# aggregate data
country_input <- data.frame(country_resided = countries_resided,
country_health_care = country_health_care_received)
View(country_input)
country_resided_input <-
country_input[!country_input$country_resided == "Germany", ]
View(country_resided_input)
country_resided_input <-
country_input[!country_input$country_resided == "Germany", "country_resided"]
country_resided_input <-
as.data.frame(country_input[!country_input$country_resided == "Germany", "country_resided"])
View(country_resided_input)
# aggregate data
country_input <- data.frame(country_resided = countries_resided,
country_health_care = country_health_care_received)
country_resided_input$country_previously_resided <-
country_input[!country_input$country_resided == "Germany", "country_resided"]
View(country_resided_input)
# aggregate data
country_input <- data.frame(country_resided = countries_resided,
country_health_care = country_health_care_received)
country_resided_input <-
country_input[!country_input$country_resided == "Germany", "country_resided"]
region_input <- data.frame(region = country_resided_input)
View(region_input)
# aggregate data
country_input <- data.frame(country_resided = countries_resided,
country_health_care = country_health_care_received)
country_resided_input <-
country_input[!country_input$country_resided == "Germany", "country_resided"]
region_input <- data.frame(region = country_resided_input)
region_input$region <- ifelse(region_input$region %in% c("Myanmar",
"Cyprus",
"India",
"Bahrain",
"Oman",
"Turkey",
"PalestineWestBank"),
"Asia",
ifelse(region_input$region %in% c("Serbia",
"Poland",
"France"),
"Europe",
ifelse(region_input$region %in% c("Barbados",
"Brazil",
"Nicaragua"),
"Americas", NA)))
View(region_input)
# aggregate data
country_input <- data.frame(country_resided = countries_resided)
country_resided_input <-
country_input[!country_input$country_resided == "Germany", ]
region_input <- data.frame(region = country_resided_input)
region_input$region <- ifelse(region_input$region %in% c("Myanmar",
"Cyprus",
"India",
"Bahrain",
"Oman",
"Turkey",
"PalestineWestBank"),
"Asia",
ifelse(region_input$region %in% c("Serbia",
"Poland",
"France"),
"Europe",
ifelse(region_input$region %in% c("Barbados",
"Brazil",
"Nicaragua"),
"Americas", NA)))
View(region_input)
View(demographics)
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
# extract country resided in
demographics$countries_resided <- gsub(" ", "",
demographics$countries_resided,
fixed = TRUE)
country_list <- regmatches(demographics$countries_resided,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$countries_resided,
perl=TRUE))
country_list_edited <- lapply(country_list, strsplit, ",")
countries_resided <- unlist(country_list_edited)
# extract respondents for countries resided in
cr_number_responses_list <- lapply(country_list_edited,
function(x) {length(unlist(x))})
cr_number_responses <- unlist(cr_number_responses_list)
cr_respondents_match <- c()
for(i in 1:nrow(demographics)){
x <- rep(paste0("CC", i), test_two[[i]])
cr_respondents_match <- c(cr_respondents_match, x)
}
# extract countries received health care in
demographics$countries_health_care <- gsub(" ", "",
demographics$countries_health_care,
fixed = TRUE)
country_health_care_list <-
regmatches(demographics$countries_health_care,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$countries_health_care,
perl=TRUE))
country_health_care_list_edited <- lapply(country_health_care_list,
strsplit, ",")
country_health_care_received <- unlist(country_health_care_list_edited)
# extract respondents for countries resided in
ch_number_responses_list <- lapply(country_health_care_list_edited,
function(x) {length(unlist(x))})
ch_number_responses <- unlist(ch_number_responses_list)
ch_respondents_match <- c()
for(i in 1:nrow(demographics)){
x <- rep(paste0("CC", i), test_two[[i]])
ch_respondents_match <- c(ch_respondents_match, x)
}
# aggregate data
region_input <- data.frame(region = countries_resided)
region_input$region <- ifelse(region_input$region %in% c("Myanmar",
"Cyprus",
"India",
"Bahrain",
"Oman",
"Turkey",
"PalestineWestBank"),
"Asia",
ifelse(region_input$region %in% c("Serbia",
"Poland",
"France"),
"Europe",
ifelse(region_input$region %in% c("Barbados",
"Brazil",
"Nicaragua"),
"Americas", NA)))
region_input$co_creator <- cr_respondents_match
country_input <- data.frame(co_creator = test_par,
country_resided = countries_resided)
View(region_input)
country_input_table <-
as.data.frame(table(region_input$co_creator,
region_input$region))
View(country_input_table)
country_input_table$co_creator <- country_input_table$Var1
country_input_table$region <- country_input_table$Var2
country_input_table$Count <- country_input_table$Freq
country_input_table <- country_input_table[country_input_table$Count > 0, ]
ggplot(country_input_table, aes(co_creator, countries_resided, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
View(country_input_table)
ggplot(country_input_table, aes(co_creator, region, fill = Count)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed()
region_input$co_creator <- cr_respondents_match
region_input <- region_input[!region_input$region = NA, ]
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
region_input <- region_input[!is.na(region_input$region), ]
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
region_input$co_creator <- ifelse(region_input$co_creator == "CC1", "CC01",
ifelse(region_input$co_creator == "CC2", "CC02",
ifelse(region_input$co_creator == "CC3", "CC03",
ifelse(region_input$co_creator == "CC4", "CC04",
ifelse(region_input$co_creator == "CC5", "CC05",
ifelse(region_input$co_creator == "CC6", "CC06",
ifelse(region_input$co_creator == "CC7", "CC07",
ifelse(region_input$co_creator == "CC8", "CC08",
ifelse(region_input$co_creator == "CC9", "CC09",
region_input$co_creator)))))))))
region_input <- region_input[!is.na(region_input$region), ]
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency")
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.minor.y = element_line(color = 2,
size = 0.25,
linetype = 1),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.grid.minor.y = element_line(color = 2,
size = 0.25,
linetype = 1))
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.75, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(size = 5,colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(region_input, aes(region, co_creator)) +
geom_point(size = 5,colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of regions resided in prior to Germany",
caption = "Data source: Patient preparedness tool") +
xlab("Region") +
ylab("Collaborator") +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
