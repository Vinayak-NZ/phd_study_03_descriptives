plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# system-challenges
system_challenges <- codes_sources[[2]]
View(system_challenges)
# system-challenges
system_challenges <- codes_sources[[2]]
system_challenges$name_labels <-
ifelse(system_challenges$name == "SCO", "Other", system_challenges$name)
system_challenges$name_labels = factor(system_challenges$name_labels,
levels = c("Wait time",
"Booking an appointment",
"Digitisation",
"Prescriptions",
"Insurance",
"Insufficient care",
"Test results",
"Navigating system",
"Other"))
ggplot(system_challenges,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
coord_flip() +
labs(title = paste0("Preparation to see the doctor"),
subtitle = "Bar chart of why people prepare",
caption = "Data source: COT project") +
xlab("Preparation reason") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# emotions
emotions <- codes_sources[[9]]
View(emotions)
# emotions
emotions <- codes_sources[[9]]
emotions$name_labels <- ifelse(emotions$name == "EO",
"Other",
emotions$name)
emotions$name_labels = factor(emotions$name_labels,
levels = c("Fear or anxiety",
"Anger or frustration",
"Sadness",
"Bored",
"Positive emotions",
"Other"))
ggplot(emotions,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# thoughts
thoughts <- codes_sources[[10]]
thoughts$name_labels <- ifelse(thoughts$name == "TO",
"Other", thoughts$name)
thoughts$name_labels = factor(thoughts$name_labels,
levels = c("Anticipation or expectations",
"Planning",
"Time of appointment",
"Waiting area observations",
"Work or study",
"Other"))
ggplot(thoughts,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# inclusion-needs
dt_inclusion <- codes_sources[[11]]
dt_inclusion$name_labels <-
ifelse(dt_inclusion$name == "Include other",
"Other",
ifelse(dt_inclusion$name = "Include empowerment",
dt_inclusion$name_labels = factor(dt_inclusion$name_labels,
levels = c("Empowerment",
"Education",
"Search",
"Accessibility",
"Communication",
"Monitoring",
"Video",
"Text",
"Native-app",
"Web-app",
"Interactivity",
"Other"))
# inclusion-needs
dt_inclusion <- codes_sources[[11]]
dt_inclusion$name_labels <-
ifelse(dt_inclusion$name == "Include other",
"Other",
ifelse(dt_inclusion$name = "Include empowerment",
# inclusion-needs
dt_inclusion <- codes_sources[[11]]
dt_inclusion$name_labels <-
ifelse(dt_inclusion$name == "Include other",
"Other",
ifelse(dt_inclusion$name == "Include empowerment",
"Empowerment",
ifelse(dt_inclusion$name == "Include education",
"Education",
ifelse(dt_inclusion$name == "Include search",
"Search",
ifelse(dt_inclusion$name == "Include accessibility",
"Accessibility",
ifelse(dt_inclusion$name == "Include communication",
"Communication",
ifelse(dt_inclusion$name == "Include monitoring",
"Monitoring",
iflese(dt_inclusion$name == "Include video",
"Video",
ifelse(dt_inclusion$name == "Include text",
"Text",
ifelse(dt_inclusion$name == "Include native-app",
"Native-app",
ifelse(dt_inclusion$name == "Include web-app",
"Web-app", "Interactivity")))))))))))
dt_inclusion$name_labels <-
ifelse(dt_inclusion$name == "Include other",
"Other",
ifelse(dt_inclusion$name == "Include empowerment",
"Empowerment",
ifelse(dt_inclusion$name == "Include education",
"Education",
ifelse(dt_inclusion$name == "Include search",
"Search",
ifelse(dt_inclusion$name == "Include accessibility",
"Accessibility",
ifelse(dt_inclusion$name == "Include communication",
"Communication",
ifelse(dt_inclusion$name == "Include monitoring",
"Monitoring",
ifelse(dt_inclusion$name == "Include video",
"Video",
ifelse(dt_inclusion$name == "Include text",
"Text",
ifelse(dt_inclusion$name == "Include native-app",
"Native-app",
ifelse(dt_inclusion$name == "Include web-app",
"Web-app", "Interactivity")))))))))))
dt_inclusion$name_labels = factor(dt_inclusion$name_labels,
levels = c("Empowerment",
"Education",
"Search",
"Accessibility",
"Communication",
"Monitoring",
"Video",
"Text",
"Native-app",
"Web-app",
"Interactivity",
"Other"))
ggplot(dt_inclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(dt_inclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(dt_inclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Waiting to see the doctor"),
subtitle = "Bar chart of emotions whilst waiting",
caption = "Data source: COT project") +
xlab("Emotions") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# exclusion-needs
dt_exclusion <- codes_sources[[12]]
dt_exclusion$name_labels <-
ifelse(dt_exclusion$name == "Exclude other",
"Other",
ifelse(dt_exclusion$name == "Exclude empowerment",
"Empowerment",
ifelse(dt_exclusion$name == "Exclude education",
"Education",
ifelse(dt_exclusion$name == "Exclude search",
"Search",
ifelse(dt_exclusion$name == "Exclude accessibility",
"Accessibility",
ifelse(dt_exclusion$name == "Exclude communication",
"Communication",
ifelse(dt_exclusion$name == "Exclude monitoring",
"Monitoring",
ifelse(dt_exclusion$name == "Exclude video",
"Video",
ifelse(dt_exclusion$name == "Exclude text",
"Text",
ifelse(dt_exclusion$name == "Exclude native-app",
"Native-app",
ifelse(dt_exclusion$name == "Exclude web-app",
"Web-app", "Interactivity")))))))))))
ggplot(dt_exclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Digital health tool"),
subtitle = "Bar chart of features to exclude in the digital health tool",
caption = "Data source: COT project") +
xlab("Features") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
dt_exclusion$name_labels = factor(dt_exclusion$name_labels,
levels = c("Empowerment",
"Education",
"Search",
"Accessibility",
"Communication",
"Monitoring",
"Video",
"Text",
"Native-app",
"Web-app",
"Interactivity",
"Other"))
ggplot(dt_exclusion,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
coord_flip() +
labs(title = paste0("Digital health tool"),
subtitle = "Bar chart of features to exclude in the digital health tool",
caption = "Data source: COT project") +
xlab("Features") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# tool-utility
tool_utility <- codes_sources[[15]]
View(tool_utility)
# tool-utility
tool_utility <- codes_sources[[15]]
tool_utility$name_labels <-
ifelse(tool_utility$name == "UTO",
"Other", tool_utility$name)
tool_utility$name_labels = factor(tool_utility$name_labels,
levels = c("No use",
"One time use",
"Important consultations",
"All consultations",
"Conditional use",
"Other"))
View(tool_utility)
ggplot(tool_utility,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Digital health tool"),
subtitle = "Bar chart of utility of tool",
caption = "Data source: COT project") +
xlab("Expected usage") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
tb_retain <- codes_sources[[13]]
tb_retain$name_labels <-
ifelse(tb_retain$name == "RTO", "Other",
ifelse(tb_retain$name == "Functionality R",
"Functionality",
ifelse(tb_retain$name == "Content R",
"Content",
ifelse(tb_retain$name == "Design R",
"Design",
ifelse(tb_retain$name == "Handling data R",
"Data", "Web-app")))))
tb_retain$name_labels = factor(tb_retain$name_labels,
levels = c("Functionality",
"Content",
"Design",
"Data",
"Web-app",
"Other"))
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
coord_flip() +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
# teambaby-modify
tb_modify <- codes_sources[[14]]
tb_modify$name_labels <-
ifelse(tb_modify$name == "MTO", "Other",
ifelse(tb_modify$name == "Functionality M",
"Functionality",
ifelse(tb_modify$name == "Content M",
"Content",
ifelse(tb_modify$name == "Design M",
"Design",
ifelse(tb_modify$name == "Handling data M",
"Data", "Web-app")))))
tb_modify$name_labels = factor(tb_modify$name_labels,
levels = c("Functionality",
"Content",
"Design",
"Data",
"Web-app",
"Other"))
ggplot(tb_modify,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggplot(tb_modify,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
labs(title = paste0("Adapting TeamBaby"),
subtitle = "Bar chart of elements of TeamBaby to retain",
caption = "Data source: COT project") +
xlab("TeamBaby feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
