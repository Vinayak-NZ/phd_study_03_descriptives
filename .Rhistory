socio_demo_sex
socio_demo_sex <-
ggplot(data = subset_data_sex, aes(x = sex, fill = sex)) +
geom_bar(key_glyph = draw_key_blank) +
scale_fill_manual(values = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Bar chart of sex distribution in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
socio_demo_sex
socio_demo_sex <-
ggplot(data = subset_data_sex, aes(x = sex, fill = "#4739a2")) +
geom_bar(key_glyph = draw_key_blank) +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Bar chart of sex distribution in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
socio_demo_sex
socio_demo_sex <-
ggplot(data = subset_data_sex, aes(x = sex, fill = "#46e7fd")) +
geom_bar(key_glyph = draw_key_blank) +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Bar chart of sex distribution in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
socio_demo_sex
socio_demo_sex <-
ggplot(data = subset_data_sex, aes(x = sex, fill = sex)) +
geom_bar(key_glyph = draw_key_blank) +
scale_fill_manual(values = c("#46e7fd", "#e18b22", "#4739a2")) +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Bar chart of sex distribution in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
socio_demo_sex
table(subset_data$sex)
table(subset_data_sex$sex)
table(subset_data_sex$sex)[1]
table(subset_data_sex$sex)[1] + 1
table(subset_data_sex$sex)["Female"] + 1
subset_data_sex$count <- ifelse(subset_data_sex$sex == "Female", table(subset_data_sex$sex)["Female"],
ifelse(subset_data_sex$sex == "male", table(subset_data_sex$sex)["Male"],
table(subset_data_sex$sex)["Diverse"]))
View(subset_data_sex)
# sex
subset_data_sex <- demographics
subset_data_sex$sex <- ifelse(subset_data_sex$sex == "female", "Female",
ifelse(subset_data_sex$sex == "male", "Male",
"Diverse"))
table(subset_data_sex$sex)["Female"]
subset_data_sex$count <- ifelse(subset_data_sex$sex == "Female", table(subset_data_sex$sex)["Female"],
ifelse(subset_data_sex$sex == "Male", table(subset_data_sex$sex)["Male"],
table(subset_data_sex$sex)["Diverse"]))
socio_demo_sex <-
ggplot(data = subset_data_sex, aes(x = reorder(sex, count), fill = sex)) +
geom_bar(key_glyph = draw_key_blank) +
scale_fill_manual(values = c("#46e7fd", "#e18b22", "#4739a2")) +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Bar chart of sex distribution in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
socio_demo_sex
# major
subset_data_major <- demographics
subset_data_major$major <- ifelse(subset_data_major$major == "computer science", "CS",
ifelse(subset_data_major$major == "chemistry and biotechnology", "CB",
ifelse(subset_data_major$major == "integrated social and cognitive psychology", "ISCP",
ifelse(subset_data_major$major == "medicinal chemistry and chemical biology", "MCCB",
ifelse(subset_data_major$major == "international business administration", "IBA",
ifelse(subset_data_major$major == "global economics and management", "GEM",
"ISCP"))))))
View(subset_data_major)
# major
subset_data_major <- demographics
subset_data_major$major <- ifelse(subset_data_major$major == "computer science", "CS",
ifelse(subset_data_major$major == "chemistry and biotechnology", "CB",
ifelse(subset_data_major$major == "integrated social and cognitive psychology", "ISCP",
ifelse(subset_data_major$major == "medicinal chemistry and chemical biology", "MCCB",
ifelse(subset_data_major$major == "international business administration", "IBA",
ifelse(subset_data_major$major == "global economics and management", "GEM",
"ISCP"))))))
subset_data_major$count <- ifelse(subset_data_major$major == "CS", table(subset_data_major$major)["CS"],
ifelse(subset_data_major$major == "CB", table(subset_data_major$major)["CB"],
ifelse(subset_data_major$major == "ISCP", table(subset_data_major$major)["ISCP"],
ifelse(subset_data_major$major == "MCCB", table(subset_data_major$major)["MCCB"],
ifelse(subset_data_major$major == "IBA", table(subset_data_major$major)["IBA"],
table(subset_data_major$major)["GEM"])))))
labels <- c(CS = 'CS = Computer science',
CB = 'CB = Chemistry and biotechnology',
ISCP = 'ISCP = Integrated social and cognitive psychology',
MCCB = 'MCCB = Medicinal chemistry and chemical biology',
IBA = 'IBA = International business administration',
GEM = 'GEM = Global economics and management')
socio_demo_major <-
ggplot(data = subset_data_major, aes(reorder(x = education_cat, count), fill = education_cat)) +
geom_bar(key_glyph = draw_key_blank) +
scale_fill_manual(values = rep("#4739a2", length(labels)), labels = labels) +
labs(title = paste0("Characteristics of sample"),
subtitle = "Bar chart of highest qualification obtained",
caption = "Data source: Cardiovascular Rehabilitation Tool",
fill = "Education") +
xlab("Education") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
socio_demo_major
socio_demo_major <-
ggplot(data = subset_data_major, aes(reorder(x = major, count), fill = major)) +
geom_bar(key_glyph = draw_key_blank) +
scale_fill_manual(values = rep("#4739a2", length(labels)), labels = labels) +
labs(title = paste0("Characteristics of sample"),
subtitle = "Bar chart of highest qualification obtained",
caption = "Data source: Cardiovascular Rehabilitation Tool",
fill = "Education") +
xlab("Education") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
socio_demo_major
renv::install()
## ---- package-load
library(ggplot2)
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
health_related_information <- read.csv("input/workshop_04_health_info.csv", sep = ";")
workshop_one_exp <- read.csv("input/workshop_01_co_creator_experience_survey.csv", sep = ",")
workshop_two_exp <- read.csv("input/workshop_02_co_creator_experience_survey.csv", sep = ",")
workshop_three_exp <- read.csv("input/workshop_03_co_creator_experience_survey.csv", sep = ",")
workshop_four_exp <- read.csv("input/workshop_04_co_creator_experience_survey.csv", sep = ",")
communication_exp <- read.csv("input/workshop_01_communication_survey.csv", sep = ";")
waiting_room_exp <- read.csv("input/workshop_02_waiting_room_survey.csv", sep = ";")
# age
subset_data_age <- demographics[demographics$age > 18, ]
subset_data_age <- subset_data_age[!is.na(subset_data_age$age), ]
socio_demo_age <-
ggplot(subset_data_age, aes(x = age)) +
geom_histogram(bins = 7, fill = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Histogram of age distribution in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Age") +
ylab("Count") +
xlim(18, 25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
socio_demo_age
View(health_related_information)
# add observation to health related info based on auxiliary information
data_edit_health_related_info <- data.frame(id = "h12",
pre_existing_conditions = "yes",
pre_existing_conditions_list = {asthma},
visits = NA)
# add observation to health related info based on auxiliary information
data_edit_health_related_info <- data.frame(id = "h12",
pre_existing_conditions = "yes",
pre_existing_conditions_list = "{asthma}",
visits = NA)
health_related_information_processed <- rbind(health_related_information, data_edit_health_related_info)
View(health_related_information_processed)
View(demographics)
# add observation to demographics based on auxiliary information
data_edit_demographics <- data.frame(id = "d12",
age = NA,
sex = "female",
major = "computer science",
language = "{English}",
language_proficiency = "{C2}",
countries_resided = "{Ghana, Germany}",
countries_health_care = "{Ghana, Germany}",
country_birth = "Ghana",
year_arrival = 2022)
demographics_processed <- rbind(demographics, data_edit_demographics)
View(demographics_processed)
View(demographics)
regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
?gregexpr
gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE)
?regmatches
regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\},)", demographics$language, perl=TRUE))
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test_two <- substr(test, 1, regexpr(",", test)-1)
test_two
test
test_two <- gsub("^(.*?),.*", "\\1", test)
test_two
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test
test <- test[[1]]
test
test_two <- gsub("^(.*?),.*", "\\1", test)
test_two
?gsub
test <- test[[1]]
test_two <- strsplit(test, ",")
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test <- test[[1]]
test_two <- strsplit(test, ",")
test_two
test_two <- unlist(strsplit(test, ","))
test_two
test_two[2]
test_two <- unlist(strsplit(test, "\\,"))
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test <- test[[1]]
test_two <- unlist(strsplit(test, "\\,"))
test_two
test <- test[[1]]
test
test_two <- unlist(strsplit(test, ",\\"))
demographics$language <- trimws(demographics$language)
View(demographics)
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test
test <- test[[1]]
test
test <- trmws(test)
test <- trimws(test)
test
demographics$language <- gsub(" ", "", demographics$language, fixed = TRUE)
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test <- test[[1]]
test
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test
test <- test[[1]]
test_two <- unlist(strsplit(test, ",\\"))
test_two <- gsub("^(.*?),.*", "\\1", test)
test_two
test_two <- strsplit(test, ",")
test_two
?lapply
test <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
test_three <- lapply(test, strsplit, ",")
test_three
test_four <- unlist(test_three)
test_four
test_five <- data.frame(language = test_four)
View(test_five)
demographics$language <- gsub(" ", "", demographics$language, fixed = TRUE)
demographics$language_proficiency <- gsub(" ", "", demographics$language_proficiency, fixed = TRUE)
language_list <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
language_list_edited <- lapply(language_list, strsplit, ",")
languages_spoken <- unlist(language_list_edited)
language_proficiency_list <- regmatches(demographics$language_proficiency,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$language_proficiency,
perl=TRUE))
language_proficiency_list_edited <- lapply(language_proficiency_list, strsplit, ",")
languages_spoken_proficiency <- unlist(language_proficiency_list_edited)
languages_input <- data.frame(language = languages_spoken,
language_proficiency = languages_spoken_proficiency)
View(languages_input)
test <- data.frame(lapply(demographics, function(x) {gsub, "Native", "C2", x}))
test <- data.frame(lapply(demographics, function(x) {gsub("Native", "C2", x)}))
test
View(test)
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("Native", "C2", x)
}
))
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("B1.2", "B1", x)
}
))
View(demographics)
demographics$language <- gsub(" ", "", demographics$language, fixed = TRUE)
demographics$language_proficiency <- gsub(" ", "", demographics$language_proficiency, fixed = TRUE)
language_list <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
language_list_edited <- lapply(language_list, strsplit, ",")
languages_spoken <- unlist(language_list_edited)
language_proficiency_list <- regmatches(demographics$language_proficiency,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$language_proficiency,
perl=TRUE))
language_proficiency_list_edited <- lapply(language_proficiency_list, strsplit, ",")
languages_spoken_proficiency <- unlist(language_proficiency_list_edited)
languages_input <- data.frame(language = languages_spoken,
language_proficiency = languages_spoken_proficiency)
View(languages_input)
table(languages_input$language, languages_input$language_proficiency)
as.data.frame(table(languages_input$language, languages_input$language_proficiency))
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("Native", "C2", x)
}
))
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("B1.2", "B1", x)
}
))
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("NA", "C1", x)
}
))
demographics$language <- gsub(" ", "", demographics$language, fixed = TRUE)
demographics$language_proficiency <- gsub(" ", "", demographics$language_proficiency, fixed = TRUE)
language_list <- regmatches(demographics$language, gregexpr("(?<=\\{)[^{}]+(?=\\})", demographics$language, perl=TRUE))
language_list_edited <- lapply(language_list, strsplit, ",")
languages_spoken <- unlist(language_list_edited)
language_proficiency_list <- regmatches(demographics$language_proficiency,
gregexpr("(?<=\\{)[^{}]+(?=\\})",
demographics$language_proficiency,
perl=TRUE))
language_proficiency_list_edited <- lapply(language_proficiency_list, strsplit, ",")
languages_spoken_proficiency <- unlist(language_proficiency_list_edited)
languages_input <- data.frame(language = languages_spoken,
language_proficiency = languages_spoken_proficiency)
as.data.frame(table(languages_input$language, languages_input$language_proficiency))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("")
languages_input_table <-
as.data.frame(table(languages_input$language,
languages_input$language_proficiency))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("")
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("") +
scale_size_continuous(range=c(10,30)) +
geom_text(aes(label = Freq))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("") +
scale_size_continuous(range=c(10,30))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("") +
scale_size_continuous(range=c(1,12))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("") +
scale_size_continuous(range=c(1,12)) +
geom_text(aes(label = Freq))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "green") +
theme_bw() + xlab("") + ylab("") +
scale_size_continuous(range=c(1,12))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range=c(1,12))
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range=c(1,12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool",
colour = "Count") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range=c(1,12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool",
color = "Count") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool",
fill = "Count") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(languages_input_table, aes(Var1, Var2)) +
geom_point(aes(size = Freq), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool",
fill = "Count") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
scale_color_discrete(name = "Count")
languages_input_table$language <- languages_input_table$Var1
languages_input_table$language_proficieny <- languages_input_table$Var2
languages_input_table$Count <- languages_input_table$Freq
languages_input_table$language_proficiency <- languages_input_table$Var2
ggplot(languages_input_table, aes(language, language_proficiency)) +
geom_point(aes(size = Count), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
languages_input_table
languages_input_table <- languages_input_table[languages_input_table$Count > 0, ]
ggplot(languages_input_table, aes(language, language_proficiency)) +
geom_point(aes(size = Count), colour = "#4739a2") +
labs(title = paste0("Characteristics of collaborators"),
subtitle = "Scatterplot of language proficiency in workshop",
caption = "Data source: Patient preparedness tool") +
xlab("Language") +
ylab("Proficiency") +
scale_size_continuous(range = c(1, 12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
