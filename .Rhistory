mid = "#46e7fd",
high = "#4739a2",
labels = c("0", "2", "4", "6", "8")) +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
communication_exp_input
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2",
labels = c("0", "2", "4", "6", "8")) +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed()
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2",
labels = c("0", "2", "4", "6", "8"))
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2",
labels = c("0", "4", "8")) +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
communication_exp_input$misunderstood
table(communication_exp_input$misunderstood)
table(communication_exp_input$listened)
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2") +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
communication_exp_input
View(communication_exp_input)
# aggregation for feeling misunderstood and not being listened to
communication_exp_input <-
as.data.frame(table(communication_exp$misunderstood,
communication_exp$listened))
communication_exp_input$misunderstood <- factor(communication_exp_input$Var1,
levels = c("Not sure", "No",
"Yes"))
communication_exp_input$listened <- factor(communication_exp_input$Var2,
levels = c("Not sure ", "No",
"Yes"))
communication_exp_input$Count <- communication_exp_input$Freq
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2",
labels = c("0", "2", "4", "6", "8")) +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2") +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
ggsave("output/misunderstood_listened_plot.png",
plot = misunderstood_listened_plot)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/02_format_codes.R")
source("R/03_data_extracts.R")
source("R/04_aggregate_data.R")
## ---- visualise-codes
source("R/05_visualise_codes_digital_tool.R")
source("R/05_visualise_codes_needs.R")
source("R/05_visualise_codes_preparation.R")
source("R/05_visualise_codes_teambaby.R")
source("R/05_visualise_codes_waiting_room_experiences.R")
source("R/05_visualise_codes_teambaby.R")
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
View(communication_exp)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
View(communication_exp)
source("R/02_data_edit.R")
source("R/02_format_codes.R")
source("R/03_data_extracts.R")
source("R/04_aggregate_data.R")
View(communication_exp)
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2") +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Was not listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
misunderstood_listened_plot
communication_exp_input
View(communication_exp_input)
misunderstood_listened_plot <-
ggplot(communication_exp_input,
aes(misunderstood,
listened,
fill = Count)) +
geom_tile(color = "#FFFFFF",
lwd = 1.5,
linetype = 1) +
geom_text(aes(label = Count), color = "#FFFFFF", size = 4) +
coord_fixed() +
scale_fill_gradient2(low = "#e18b22",
mid = "#46e7fd",
high = "#4739a2") +
labs(title = paste0("Communication experiences with doctors"),
subtitle = "Heatmap of feeling misunderstood and not being listened to by the physician",
caption = "Data source: Patient preparedness tool") +
xlab("Felt misunderstood") +
ylab("Listened to by physician") +
guides(fill = guide_colourbar(title = "Count",
barwidth = 0.5,
barheight = 20)) +
theme(panel.background = element_blank(), axis.line = element_line(colour = "black"),
panel.grid = element_line(color = "#e18b22", size = 0.2, linetype = 2),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggsave("output/misunderstood_listened_plot.png",
plot = misunderstood_listened_plot)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/06_flowchart_workshops.R")
team_baby_access <- boxGrob(glue("DHI A access",
"n = {pop}",
"Date = 10th February",
pop = txtInt(10),
.sep = "\n"))
workshop_three <- boxGrob(glue("Workshop three",
"n = {pop}",
"Date = 14th February",
pop = txtInt(12),
.sep = "\n"))
workshop_four <- boxGrob(glue("Workshop four",
"n = {pop}",
"Date = 20th February",
pop = txtInt(11),
.sep = "\n"))
workshop_proto <- boxGrob(glue("Prototype workshop",
"n = {pop}",
"Date = 11th March",
pop = txtInt(5),
.sep = "\n"))
workshop_methods <- boxGrob(glue("Methods workshop",
"n = {pop}",
"Date = 19th March",
pop = txtInt(6),
.sep = "\n"))
png("output/flowchart_part_two.png",
width=500,
height = 500,
units = "px")
grid.newpage()
part_two <- spreadVertical(team_baby_access = team_baby_access,
workshop_three = workshop_three,
workshop_four = workshop_four,
grps = workshop_proto)
grps <- alignVertical(reference = part_two$grps,
workshop_proto, workshop_methods) %>%
spreadHorizontal()
part_two$grps <- NULL
for (i in 1:(length(part_two) - 1)) {
connectGrob(part_two[[i]], part_two[[i + 1]], type = "vert") %>%
print
}
connectGrob(part_two$workshop_four, grps[[1]], type = "N")
connectGrob(part_two$workshop_four, grps[[2]], type = "N")
part_two
grps
dev.off()
dev.off()
dev.off()
demographics <- read.csv("input/workshop_04_demographics.csv", sep = ";")
health_related_information <- read.csv("input/workshop_04_health_info.csv", sep = ";")
workshop_one_exp <- read.csv("input/workshop_01_co_creator_experience_survey.csv", sep = ",")
workshop_two_exp <- read.csv("input/workshop_02_co_creator_experience_survey.csv", sep = ",")
workshop_three_exp <- read.csv("input/workshop_03_co_creator_experience_survey.csv", sep = ",")
workshop_four_exp <- read.csv("input/workshop_04_co_creator_experience_survey.csv", sep = ",")
communication_exp <- read.csv("input/workshop_01_communication_survey.csv", sep = ";")
waiting_room_exp <- read.csv("input/workshop_02_waiting_room_survey.csv", sep = ";")
needs_complaints <- read.csv("input/needs_complaints.csv", sep = "\t")
system_challenges <- read.csv("input/system_challenges.csv", sep = "\t")
responsibility_assumptions <- read.csv("input/responsibility_assumptions.csv", sep = "\t")
preparation_timing <- read.csv("input/preparation_timing.csv", sep = "\t")
preparation_location <- read.csv("input/preparation_location.csv", sep = "\t")
preparation_method <- read.csv("input/preparation_method.csv", sep = "\t")
preparation_reason <- read.csv("input/preparation_reason.csv", sep = "\t")
preparation_assistance <- read.csv("input/preparation_assistance.csv", sep = "\t")
emotions <- read.csv("input/emotions.csv", sep = "\t")
thoughts <- read.csv("input/thoughts.csv", sep = "\t")
digital_tool_inclusion <- read.csv("input/digital_tool_inclusion.csv", sep = "\t")
digital_tool_exclusion <- read.csv("input/digital_tool_exclusion.csv", sep = "\t")
retaining_teambaby <- read.csv("input/retaining_teambaby.csv", sep = "\t")
modifying_teambaby <- read.csv("input/modifying_teambaby.csv", sep = "\t")
utility <- read.csv("input/utility.csv", sep = "\t")
image_codes_all <- read.csv("input/image_codes_all.csv", sep = "\t")
code_frequencies <- read.csv("input/code_frequencies.csv", sep = ",")
source("R/02_data_edit.R")
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("Native", "C2", x)
}
))
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("B1.2", "B1", x)
}
))
demographics <-
data.frame(lapply(demographics,
function(x) {
gsub("NA", "C1", x)
}
))
# add observation to demographics based on auxiliary information
data_edit_demographics <- data.frame(id = "d12",
age = NA,
sex = "female",
major = "computer science",
language = "{English}",
language_proficiency = "{C2}",
countries_resided = "{Ghana, Germany}",
countries_health_care = "{Ghana, Germany}",
country_birth = "Ghana",
year_arrival = 2022)
demographics_processed <- rbind(demographics, data_edit_demographics)
demographics <- demographics_processed
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/02_format_codes.R")
source("R/03_data_extracts.R")
source("R/04_aggregate_data.R")
source("R/05_visualise_codes_teambaby.R")
# teambaby-retain
tb_retain <- codes_sources[[13]]
tb_retain$name_labels <-
ifelse(tb_retain$name == "RTO", "Other",
ifelse(tb_retain$name == "Functionality R",
"Functionality",
ifelse(tb_retain$name == "Content R",
"Content",
ifelse(tb_retain$name == "Design R",
"Design",
ifelse(tb_retain$name == "Handling data R",
"Data", "Web-app")))))
tb_retain$name_labels = factor(tb_retain$name_labels,
levels = c("Functionality",
"Content",
"Design",
"Data",
"Web-app",
"Other"))
plot_tb_retain <-
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Suitability of DHI A"),
subtitle = "Bar chart of elements of DHI A to retain",
caption = "Data source: Patient preparedness tool") +
xlab("DHI A feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggsave("output/plot_tb_retain.png",
plot = plot_tb_retain)
# teambaby-modify
tb_modify <- codes_sources[[14]]
tb_modify$name_labels <-
ifelse(tb_modify$name == "MTO", "Other",
ifelse(tb_modify$name == "Functionality M",
"Functionality",
ifelse(tb_modify$name == "Content M",
"Content",
ifelse(tb_modify$name == "Design M",
"Design",
ifelse(tb_modify$name == "Handling data M",
"Data", "Web-app")))))
tb_modify$name_labels = factor(tb_modify$name_labels,
levels = c("Functionality",
"Content",
"Design",
"Data",
"Web-app",
"Other"))
plot_tb_modify <-
ggplot(tb_modify,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 50) +
labs(title = paste0("Suitability of DHI A"),
subtitle = "Bar chart of elements of DHI A to modify",
caption = "Data source: Patient preparedness tool") +
xlab("DHI A feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
ggsave("output/plot_tb_modify.png",
plot = plot_tb_modify)
plot_tb_retain <-
ggplot(tb_retain,
aes(reorder(name_labels,
name_labels,
function(x)-length(x)))) +
geom_bar(fill = "#4739a2") +
scale_x_discrete(drop=FALSE) +
ylim(0, 20) +
labs(title = paste0("Suitability of DHI A"),
subtitle = "Bar chart of elements of DHI A to retain",
caption = "Data source: Patient preparedness tool") +
xlab("DHI A feature") +
ylab("Frequency of codes") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.key = element_rect(fill = NA),
legend.key.width = unit(0, "pt"),
legend.spacing.x = unit(0, "pt"))
plot_tb_retain
